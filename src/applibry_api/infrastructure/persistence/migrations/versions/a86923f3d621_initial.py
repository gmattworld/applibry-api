"""Initial

Revision ID: a86923f3d621
Revises: 
Create Date: 2025-01-17 22:48:27.510229

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a86923f3d621'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('app_platforms',
    sa.Column('app_id', sa.UUID(), nullable=True),
    sa.Column('platform_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['app_id'], ['apps.id'], use_alter=True),
    sa.ForeignKeyConstraint(['platform_id'], ['platforms.id'], use_alter=True)
    )
    op.create_table('app_tags',
    sa.Column('app_id', sa.UUID(), nullable=True),
    sa.Column('tag_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['app_id'], ['apps.id'], use_alter=True),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], use_alter=True)
    )
    op.create_table('apps',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('slug', sa.String(length=500), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('brief', sa.Text(), nullable=False),
    sa.Column('website', sa.String(length=255), nullable=True),
    sa.Column('icon', sa.String(length=400), nullable=True),
    sa.Column('banner', sa.String(length=400), nullable=True),
    sa.Column('meta_title', sa.String(length=255), nullable=True),
    sa.Column('meta_description', sa.Text(), nullable=True),
    sa.Column('meta_keywords', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'PUBLISHED', 'PENDING_REVIEW', name='appstatus'), nullable=True),
    sa.Column('published_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('pricing_model', sa.Enum('FREE', 'FREEMIUM', 'PAID', 'ENTERPRISE', name='pricingmodel'), nullable=False),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('api_available', sa.Boolean(), nullable=True),
    sa.Column('integration_guide', sa.Text(), nullable=True),
    sa.Column('documentation_link', sa.String(length=255), nullable=True),
    sa.Column('ratings', sa.Float(), nullable=True),
    sa.Column('reviews', sa.Integer(), nullable=True),
    sa.Column('upvotes', sa.Integer(), nullable=True),
    sa.Column('shares', sa.Integer(), nullable=True),
    sa.Column('rank', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_by_id', sa.UUID(), nullable=True),
    sa.Column('last_updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('last_updated_by_id', sa.UUID(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('deleted_by_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], use_alter=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], use_alter=True),
    sa.ForeignKeyConstraint(['deleted_by_id'], ['users.id'], use_alter=True),
    sa.ForeignKeyConstraint(['last_updated_by_id'], ['users.id'], use_alter=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('categories',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_by_id', sa.UUID(), nullable=True),
    sa.Column('last_updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('last_updated_by_id', sa.UUID(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('deleted_by_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], use_alter=True),
    sa.ForeignKeyConstraint(['deleted_by_id'], ['users.id'], use_alter=True),
    sa.ForeignKeyConstraint(['last_updated_by_id'], ['users.id'], use_alter=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('permissions',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('code', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('module', sa.Enum('CORE', 'ADMIN', name='modules'), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_by_id', sa.UUID(), nullable=True),
    sa.Column('last_updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('last_updated_by_id', sa.UUID(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('deleted_by_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], use_alter=True),
    sa.ForeignKeyConstraint(['deleted_by_id'], ['users.id'], use_alter=True),
    sa.ForeignKeyConstraint(['last_updated_by_id'], ['users.id'], use_alter=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('name')
    )
    op.create_table('platforms',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_by_id', sa.UUID(), nullable=True),
    sa.Column('last_updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('last_updated_by_id', sa.UUID(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('deleted_by_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], use_alter=True),
    sa.ForeignKeyConstraint(['deleted_by_id'], ['users.id'], use_alter=True),
    sa.ForeignKeyConstraint(['last_updated_by_id'], ['users.id'], use_alter=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('reviews',
    sa.Column('comment', sa.String(length=100), nullable=False),
    sa.Column('upvotes', sa.Integer(), nullable=True),
    sa.Column('app_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_by_id', sa.UUID(), nullable=True),
    sa.Column('last_updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('last_updated_by_id', sa.UUID(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('deleted_by_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['app_id'], ['apps.id'], use_alter=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], use_alter=True),
    sa.ForeignKeyConstraint(['deleted_by_id'], ['users.id'], use_alter=True),
    sa.ForeignKeyConstraint(['last_updated_by_id'], ['users.id'], use_alter=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], use_alter=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('comment')
    )
    op.create_table('role_permissions',
    sa.Column('role_id', sa.UUID(), nullable=True),
    sa.Column('permission_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], use_alter=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], use_alter=True)
    )
    op.create_table('roles',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('code', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_system_role', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_by_id', sa.UUID(), nullable=True),
    sa.Column('last_updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('last_updated_by_id', sa.UUID(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('deleted_by_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], use_alter=True),
    sa.ForeignKeyConstraint(['deleted_by_id'], ['users.id'], use_alter=True),
    sa.ForeignKeyConstraint(['last_updated_by_id'], ['users.id'], use_alter=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('name')
    )
    op.create_table('tags',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_by_id', sa.UUID(), nullable=True),
    sa.Column('last_updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('last_updated_by_id', sa.UUID(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('deleted_by_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], use_alter=True),
    sa.ForeignKeyConstraint(['deleted_by_id'], ['users.id'], use_alter=True),
    sa.ForeignKeyConstraint(['last_updated_by_id'], ['users.id'], use_alter=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('email_confirmed', sa.Boolean(), nullable=True),
    sa.Column('password_hash', sa.String(length=512), nullable=True),
    sa.Column('public_key', sa.String(length=100), nullable=True),
    sa.Column('verification_code', sa.String(length=512), nullable=True),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('invitation_code', sa.String(length=20), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('receive_newsletter', sa.Boolean(), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('phone_number_confirmed', sa.Boolean(), nullable=True),
    sa.Column('two_factor_enabled', sa.Boolean(), nullable=True),
    sa.Column('lockout_end', sa.TIMESTAMP(), nullable=True),
    sa.Column('lockout_enabled', sa.Boolean(), nullable=True),
    sa.Column('access_failed_count', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.UUID(), nullable=True),
    sa.Column('password_reset_code', sa.String(length=512), nullable=True),
    sa.Column('password_reset_requested', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_by_id', sa.UUID(), nullable=True),
    sa.Column('last_updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('last_updated_by_id', sa.UUID(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('deleted_by_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], use_alter=True),
    sa.ForeignKeyConstraint(['deleted_by_id'], ['users.id'], use_alter=True),
    sa.ForeignKeyConstraint(['last_updated_by_id'], ['users.id'], use_alter=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], use_alter=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('public_key'),
    sa.UniqueConstraint('username')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    op.drop_table('tags')
    op.drop_table('roles')
    op.drop_table('role_permissions')
    op.drop_table('reviews')
    op.drop_table('platforms')
    op.drop_table('permissions')
    op.drop_table('categories')
    op.drop_table('apps')
    op.drop_table('app_tags')
    op.drop_table('app_platforms')
    # ### end Alembic commands ###
